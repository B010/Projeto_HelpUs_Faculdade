@model HelpUs.Models.HomeViewModel
@{
    ViewBag.Title = "Detalhes";
}

<div id="main">
    <div class="col-md-12" style=" text-align: center;">
        <h1 style=" vertical-align: middle;">@Model.CasoDetalhes.TituloCaso</h1>
    </div>
    <div class="col-md-12">
        <div class="col-md-1"></div>
        <div class="col-md-10" style="background-color:dimgrey; min-height:200px; margin-bottom:20px">
            <Label>@Model.CasoDetalhes.DescricaoCaso</Label>
        </div>
        <div class="col-md-1"></div>
    </div>
    <div class="col-md-12">
        <div class="col-md-5" style="background-color:yellow;text-align: center;">
            <h3>
                @if (Model.CasoDetalhes.Quantidade != null)
                {
                    <label>Quantidade Arrecadada: <b style="color:green">@Model.CasoDetalhes.QuantidadeTotal</b></label>
                    <br />
                    <br />
                    <label>Quantidade Necessaria: <b style="color: blue">@Model.CasoDetalhes.Quantidade</b></label>
                }
                else
                {
                    <label>Valor Arrecadado: <b style="color:green">R$@Model.CasoDetalhes.ValorTotal</b></label>
                    <br />
                    <br />
                    <label>Valor Necessario: <b style="color:blue">R$@Model.CasoDetalhes.Valor</b></label>
                }
            </h3>
        </div>

        <div class="col-md-3">
            <canvas id="pizza" width="100" height="100"></canvas>
        </div>

        <div class="col-md-4" style="background-color:yellow;"></div>
    </div>
</div>
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script>
        var ctx = document.getElementById('pizza').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Arrecadado', 'Restando'],
                datasets: [{
                    data: [12, 19],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        display:false,
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                    xAxes: [{
                        display:false
                    }]
                },
                legend: {
                    display: false
                }
            }
        });
    </script>
}